From 0887e6e9af855e8e2ff3cbc0fbdf7de8c0ff2edc Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Tue, 3 Aug 2021 14:36:47 +0300
Subject: [PATCH] ucm-imx8m-plus: Add support: update files

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 arch/arm/dts/Makefile                         |   4 +
 arch/arm/include/asm/arch-imx8m/imx8mm_pins.h |   4 +-
 arch/arm/mach-imx/imx8m/Kconfig               |  28 ++
 arch/arm/mach-imx/imx8m/soc.c                 |   3 +-
 arch/arm/mach-imx/mac.c                       |   2 +-
 board/compulab/common/Makefile                |  11 +-
 board/compulab/common/common.c                |   4 +-
 board/compulab/common/common.h                |   3 +-
 board/compulab/common/eeprom.c                | 392 +++++++++++++++++++-------
 board/compulab/common/eeprom.h                |  34 ++-
 common/eeprom/eeprom_field.c                  | 116 ++++++--
 common/eeprom/eeprom_layout.c                 |  58 +++-
 drivers/video/Kconfig                         |   9 +
 drivers/video/Makefile                        |   1 +
 include/eeprom_field.h                        |  45 +--
 include/eeprom_layout.h                       |   2 +
 tools/env/fw_env.config                       |  35 +--
 tools/env/fw_env_main.c                       |  73 ++++-
 tools/env/fw_env_private.h                    |   1 +
 19 files changed, 613 insertions(+), 212 deletions(-)

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index aa0c6a75c3..e5d929ab0c 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -876,6 +876,10 @@ dtb-$(CONFIG_ARCH_IMX8M) += \
 	imx8mp-evk.dtb \
 	imx8mp-phyboard-pollux-rdk.dtb \
 	imx8mq-pico-pi.dtb
+dtb-$(CONFIG_TARGET_UCM_IMX8M_MINI) += ucm-imx8m-mini.dtb
+dtb-$(CONFIG_TARGET_MCM_IMX8M_MINI) += mcm-imx8m-mini.dtb
+dtb-$(CONFIG_TARGET_IOT_GATE_IMX8) += iot-gate-imx8.dtb
+dtb-$(CONFIG_TARGET_UCM_IMX8M_PLUS) += ucm-imx8m-plus.dtb
 
 dtb-$(CONFIG_ARCH_IMXRT) += imxrt1050-evk.dtb \
 	imxrt1020-evk.dtb
diff --git a/arch/arm/include/asm/arch-imx8m/imx8mm_pins.h b/arch/arm/include/asm/arch-imx8m/imx8mm_pins.h
index 210e96e1db..a1111b9241 100644
--- a/arch/arm/include/asm/arch-imx8m/imx8mm_pins.h
+++ b/arch/arm/include/asm/arch-imx8m/imx8mm_pins.h
@@ -612,12 +612,12 @@ enum {
 	IMX8MM_PAD_I2C1_SDA_ENET1_MDIO                                =  IOMUX_PAD(0x0480, 0x0218, 1, 0x04C0, 2, 0),
 	IMX8MM_PAD_I2C1_SDA_GPIO5_IO15                                =  IOMUX_PAD(0x0480, 0x0218, 5, 0x0000, 0, 0),
 
-	IMX8MM_PAD_I2C2_SCL_I2C2_SCL                                  =  IOMUX_PAD(0x0484, 0x021C, 0, 0x0000, 0, 0),
+	IMX8MM_PAD_I2C2_SCL_I2C2_SCL                                  =  IOMUX_PAD(0x0484, 0x021C, 0 | IOMUX_CONFIG_SION, 0x0000, 0, 0),
 	IMX8MM_PAD_I2C2_SCL_ENET1_1588_EVENT1_IN                      =  IOMUX_PAD(0x0484, 0x021C, 1, 0x0000, 0, 0),
 	IMX8MM_PAD_I2C2_SCL_USDHC3_CD_B                               =  IOMUX_PAD(0x0484, 0x021C, 2, 0x0544, 1, 0),
 	IMX8MM_PAD_I2C2_SCL_GPIO5_IO16                                =  IOMUX_PAD(0x0484, 0x021C, 5, 0x0000, 0, 0),
 
-	IMX8MM_PAD_I2C2_SDA_I2C2_SDA                                  =  IOMUX_PAD(0x0488, 0x0220, 0, 0x0000, 0, 0),
+	IMX8MM_PAD_I2C2_SDA_I2C2_SDA                                  =  IOMUX_PAD(0x0488, 0x0220, 0 | IOMUX_CONFIG_SION, 0x0000, 0, 0),
 	IMX8MM_PAD_I2C2_SDA_ENET1_1588_EVENT1_OUT                     =  IOMUX_PAD(0x0488, 0x0220, 1, 0x0000, 0, 0),
 	IMX8MM_PAD_I2C2_SDA_USDHC3_WP                                 =  IOMUX_PAD(0x0488, 0x0220, 2, 0x0548, 1, 0),
 	IMX8MM_PAD_I2C2_SDA_GPIO5_IO17                                =  IOMUX_PAD(0x0488, 0x0220, 5, 0x0000, 0, 0),
diff --git a/arch/arm/mach-imx/imx8m/Kconfig b/arch/arm/mach-imx/imx8m/Kconfig
index 9e5b6d7ffa..61a9c8938c 100644
--- a/arch/arm/mach-imx/imx8m/Kconfig
+++ b/arch/arm/mach-imx/imx8m/Kconfig
@@ -201,6 +201,30 @@ config TARGET_PHYCORE_IMX8MP
 	select IMX8MP
         select SUPPORT_SPL
 	select IMX8M_LPDDR4
+
+config TARGET_UCM_IMX8M_MINI
+	bool "CompuLab ucm-imx8m-mini"
+	select IMX8MM
+	select SUPPORT_SPL
+	select IMX8M_LPDDR4
+
+config TARGET_MCM_IMX8M_MINI
+	bool "CompuLab mcm-imx8m-mini"
+	select IMX8MM
+	select SUPPORT_SPL
+	select IMX8M_LPDDR4
+
+config TARGET_IOT_GATE_IMX8
+	bool "CompuLab iot-gate-imx8"
+	select IMX8MM
+	select SUPPORT_SPL
+	select IMX8M_LPDDR4
+
+config TARGET_UCM_IMX8M_PLUS
+	bool "CompuLab ucm-imx8m-plus"
+	select IMX8MP
+	select SUPPORT_SPL
+	select IMX8M_LPDDR4
 endchoice
 
 source "board/freescale/imx8mq_evk/Kconfig"
@@ -217,5 +241,9 @@ source "board/beacon/imx8mm/Kconfig"
 source "board/beacon/imx8mn/Kconfig"
 source "board/phytec/phycore_imx8mm/Kconfig"
 source "board/phytec/phycore_imx8mp/Kconfig"
+source "board/compulab/ucm-imx8m-mini/Kconfig"
+source "board/compulab/mcm-imx8m-mini/Kconfig"
+source "board/compulab/iot-gate-imx8/Kconfig"
+source "board/compulab/ucm-imx8m-plus/Kconfig"
 
 endif
diff --git a/arch/arm/mach-imx/imx8m/soc.c b/arch/arm/mach-imx/imx8m/soc.c
index 95c23b0df4..01c5088718 100644
--- a/arch/arm/mach-imx/imx8m/soc.c
+++ b/arch/arm/mach-imx/imx8m/soc.c
@@ -247,8 +247,7 @@ int dram_init(void)
 
 	return 0;
 }
-
-int dram_init_banksize(void)
+__weak int dram_init_banksize(void)
 {
 	int bank = 0;
 	int ret;
diff --git a/arch/arm/mach-imx/mac.c b/arch/arm/mach-imx/mac.c
index 9bb63d25b4..02de001f30 100644
--- a/arch/arm/mach-imx/mac.c
+++ b/arch/arm/mach-imx/mac.c
@@ -23,7 +23,7 @@ struct imx_mac_fuse {
 #define MAC_FUSE_MX6_OFFSET	0x620
 #define MAC_FUSE_MX7_OFFSET	0x640
 
-void imx_get_mac_from_fuse(int dev_id, unsigned char *mac)
+__weak void imx_get_mac_from_fuse(int dev_id, unsigned char *mac)
 {
 	struct imx_mac_fuse *fuse;
 	u32 offset;
diff --git a/board/compulab/common/Makefile b/board/compulab/common/Makefile
index 7ba92f5db0..b57f589ec2 100644
--- a/board/compulab/common/Makefile
+++ b/board/compulab/common/Makefile
@@ -1,10 +1,17 @@
-# SPDX-License-Identifier: GPL-2.0+
 #
 # (C) Copyright 2011 - 2013 CompuLab, Ltd. <www.compulab.co.il>
 #
 # Author: Igor Grinberg <grinberg@compulab.co.il>
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
 
+obj-y				+= fdt.o
 obj-y				+= common.o
-obj-$(CONFIG_SYS_I2C)		+= eeprom.o
+obj-y				+= mmc.o
+obj-y				+= ../../freescale/common/mmc.o
+ifneq "$(or $(CONFIG_SYS_I2C),$(CONFIG_DM_I2C))" ""
+obj-y				+= eeprom.o
+endif # (CONFIG_SYS_I2C || CONFIG_DM_I2C2)
 obj-$(CONFIG_LCD)		+= omap3_display.o
 obj-$(CONFIG_SMC911X)		+= omap3_smc911x.o
diff --git a/board/compulab/common/common.c b/board/compulab/common/common.c
index 528c97df19..a425778fde 100644
--- a/board/compulab/common/common.c
+++ b/board/compulab/common/common.c
@@ -1,8 +1,9 @@
-// SPDX-License-Identifier: GPL-2.0+
 /*
  * (C) Copyright 2014 CompuLab, Ltd. <www.compulab.co.il>
  *
  * Authors: Igor Grinberg <grinberg@compulab.co.il>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
  */
 
 #include <common.h>
@@ -10,7 +11,6 @@
 #include <asm/bootm.h>
 #include <asm/gpio.h>
 #include <asm/setup.h>
-#include <linux/delay.h>
 
 #include "common.h"
 #include "eeprom.h"
diff --git a/board/compulab/common/common.h b/board/compulab/common/common.h
index 17cfbb6f27..759ec31317 100644
--- a/board/compulab/common/common.h
+++ b/board/compulab/common/common.h
@@ -1,8 +1,9 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
 /*
  * (C) Copyright 2014 CompuLab, Ltd. <www.compulab.co.il>
  *
  * Authors: Igor Grinberg <grinberg@compulab.co.il>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
  */
 
 #ifndef _CL_COMMON_
diff --git a/board/compulab/common/eeprom.c b/board/compulab/common/eeprom.c
index 5206cf5c0a..c1d321361c 100644
--- a/board/compulab/common/eeprom.c
+++ b/board/compulab/common/eeprom.c
@@ -1,18 +1,21 @@
-// SPDX-License-Identifier: GPL-2.0+
 /*
  * (C) Copyright 2011 CompuLab, Ltd. <www.compulab.co.il>
  *
  * Authors: Nikita Kiryanov <nikita@compulab.co.il>
  *	    Igor Grinberg <grinberg@compulab.co.il>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
  */
 
+#include <linux/ctype.h>
 #include <common.h>
-#include <eeprom.h>
+#include <asm/mach-imx/mxc_i2c.h>
 #include <i2c.h>
+#include <dm.h>
 #include <eeprom_layout.h>
 #include <eeprom_field.h>
-#include <asm/setup.h>
 #include <linux/kernel.h>
+#include <asm/setup.h>
 #include "eeprom.h"
 
 #ifndef CONFIG_SYS_I2C_EEPROM_ADDR
@@ -20,45 +23,82 @@
 # define CONFIG_SYS_I2C_EEPROM_ADDR_LEN	1
 #endif
 
+#ifndef CONFIG_SYS_I2C_EEPROM_ADDR_SB
+# define CONFIG_SYS_I2C_EEPROM_ADDR_SB	0x54
+#endif
+
 #ifndef CONFIG_SYS_I2C_EEPROM_BUS
-#define CONFIG_SYS_I2C_EEPROM_BUS	0
+# define CONFIG_SYS_I2C_EEPROM_BUS	1
 #endif
 
-#define EEPROM_LAYOUT_VER_OFFSET	44
-#define BOARD_SERIAL_OFFSET		20
-#define BOARD_SERIAL_OFFSET_LEGACY	8
-#define BOARD_REV_OFFSET		0
-#define BOARD_REV_OFFSET_LEGACY		6
-#define BOARD_REV_SIZE			2
-#define PRODUCT_NAME_OFFSET		128
-#define PRODUCT_NAME_SIZE		16
-#define MAC_ADDR_OFFSET			4
-#define MAC_ADDR_OFFSET_LEGACY		0
+#ifndef CONFIG_SYS_I2C_EEPROM_BUS_SB
+# define CONFIG_SYS_I2C_EEPROM_BUS_SB	0
+#endif
 
 #define LAYOUT_INVALID	0
 #define LAYOUT_LEGACY	0xff
 
-static int cl_eeprom_bus;
 static int cl_eeprom_layout; /* Implicitly LAYOUT_INVALID */
 
+struct eeprom_path {
+	int bus;
+	uint8_t chip;
+};
+
+static const struct eeprom_path eeprom_som = {
+	CONFIG_SYS_I2C_EEPROM_BUS,
+	CONFIG_SYS_I2C_EEPROM_ADDR
+};
+static const struct eeprom_path eeprom_sb = {
+	CONFIG_SYS_I2C_EEPROM_BUS_SB,
+	CONFIG_SYS_I2C_EEPROM_ADDR_SB
+};
+
+static const struct eeprom_path *working_eeprom;
+
+static struct udevice *g_dev = NULL;
+
+static int cpl_eeprom_init(void) {
+
+	struct udevice *bus, *dev;
+	int ret;
+
+	if (!g_dev) {
+
+		ret = uclass_get_device_by_seq(UCLASS_I2C, working_eeprom->bus, &bus);
+		if (ret) {
+			printf("%s: No bus %d\n", __func__, working_eeprom->bus);
+			return ret;
+		}
+
+		ret = dm_i2c_probe(bus, working_eeprom->chip, 0, &dev);
+		if (ret) {
+			printf("%s: Can't find device id=0x%x, on bus %d\n",
+				__func__, working_eeprom->chip, working_eeprom->bus);
+			return ret;
+		}
+
+		/* Init */
+		g_dev = dev;
+	}
+
+	return 0;
+}
+
 static int cl_eeprom_read(uint offset, uchar *buf, int len)
 {
 	int res;
-	unsigned int current_i2c_bus = i2c_get_bus_num();
 
-	res = i2c_set_bus_num(cl_eeprom_bus);
+	res = cpl_eeprom_init();
 	if (res < 0)
 		return res;
 
-	res = i2c_read(CONFIG_SYS_I2C_EEPROM_ADDR, offset,
-			CONFIG_SYS_I2C_EEPROM_ADDR_LEN, buf, len);
-
-	i2c_set_bus_num(current_i2c_bus);
+	res  = dm_i2c_read(g_dev, offset, buf, len);
 
 	return res;
 }
 
-static int cl_eeprom_setup(uint eeprom_bus)
+static int cl_eeprom_setup(const struct eeprom_path *eeprom)
 {
 	int res;
 
@@ -66,10 +106,11 @@ static int cl_eeprom_setup(uint eeprom_bus)
 	 * We know the setup was already done when the layout is set to a valid
 	 * value and we're using the same bus as before.
 	 */
-	if (cl_eeprom_layout != LAYOUT_INVALID && eeprom_bus == cl_eeprom_bus)
+	if (cl_eeprom_layout != LAYOUT_INVALID && eeprom == working_eeprom)
 		return 0;
 
-	cl_eeprom_bus = eeprom_bus;
+	working_eeprom = eeprom;
+	g_dev = NULL;
 	res = cl_eeprom_read(EEPROM_LAYOUT_VER_OFFSET,
 			     (uchar *)&cl_eeprom_layout, 1);
 	if (res) {
@@ -83,14 +124,14 @@ static int cl_eeprom_setup(uint eeprom_bus)
 	return 0;
 }
 
-void get_board_serial(struct tag_serialnr *serialnr)
+static void cpl_get_board_serial(struct tag_serialnr *serialnr, const struct eeprom_path *eeprom)
 {
 	u32 serial[2];
 	uint offset;
 
 	memset(serialnr, 0, sizeof(*serialnr));
 
-	if (cl_eeprom_setup(CONFIG_SYS_I2C_EEPROM_BUS))
+	if (cl_eeprom_setup(eeprom))
 		return;
 
 	offset = (cl_eeprom_layout != LAYOUT_LEGACY) ?
@@ -104,17 +145,25 @@ void get_board_serial(struct tag_serialnr *serialnr)
 		serialnr->high = serial[1];
 	}
 }
+inline void cpl_get_som_serial(struct tag_serialnr *serialnr)
+{
+	return cpl_get_board_serial(serialnr, &eeprom_som);
+}
+inline void cpl_get_sb_serial(struct tag_serialnr *serialnr)
+{
+	return cpl_get_board_serial(serialnr, &eeprom_sb);
+}
 
 /*
  * Routine: cl_eeprom_read_mac_addr
  * Description: read mac address and store it in buf.
  */
-int cl_eeprom_read_mac_addr(uchar *buf, uint eeprom_bus)
+int cl_eeprom_read_mac_addr(uchar *buf, uint eeprom_bus __attribute__((unused)))
 {
 	uint offset;
 	int err;
 
-	err = cl_eeprom_setup(eeprom_bus);
+	err = cl_eeprom_setup(&eeprom_som);
 	if (err)
 		return err;
 
@@ -130,7 +179,7 @@ static u32 board_rev;
  * Routine: cl_eeprom_get_board_rev
  * Description: read system revision from eeprom
  */
-u32 cl_eeprom_get_board_rev(uint eeprom_bus)
+u32 cl_eeprom_get_board_rev(uint eeprom_bus __attribute__((unused)))
 {
 	char str[5]; /* Legacy representation can contain at most 4 digits */
 	uint offset = BOARD_REV_OFFSET_LEGACY;
@@ -138,7 +187,7 @@ u32 cl_eeprom_get_board_rev(uint eeprom_bus)
 	if (board_rev)
 		return board_rev;
 
-	if (cl_eeprom_setup(eeprom_bus))
+	if (cl_eeprom_setup(&eeprom_som))
 		return 0;
 
 	if (cl_eeprom_layout != LAYOUT_LEGACY)
@@ -157,7 +206,29 @@ u32 cl_eeprom_get_board_rev(uint eeprom_bus)
 	}
 
 	return board_rev;
-};
+}
+
+static u32 cl_eeprom_get_revision(const struct eeprom_path *eeprom)
+{
+	u32 revision;
+
+	if (cl_eeprom_setup(eeprom))
+		return 0;
+
+	if (cl_eeprom_read(BOARD_REV_OFFSET, (uchar *)&revision, BOARD_REV_SIZE))
+		return 0;
+
+	return revision;
+}
+u32 cl_eeprom_get_som_revision(void)
+{
+	return cl_eeprom_get_revision(&eeprom_som);
+}
+u32 cl_eeprom_get_sb_revision(void)
+{
+	return cl_eeprom_get_revision(&eeprom_sb);
+}
+
 
 /*
  * Routine: cl_eeprom_get_board_rev
@@ -168,14 +239,14 @@ u32 cl_eeprom_get_board_rev(uint eeprom_bus)
  *
  * @return: 0 on success, < 0 on failure
  */
-int cl_eeprom_get_product_name(uchar *buf, uint eeprom_bus)
+int cl_eeprom_get_product_name(uchar *buf, uint eeprom_bus __attribute__((unused)))
 {
 	int err;
 
 	if (buf == NULL)
 		return -EINVAL;
 
-	err = cl_eeprom_setup(eeprom_bus);
+	err = cl_eeprom_setup(&eeprom_som);
 	if (err)
 		return err;
 
@@ -186,6 +257,71 @@ int cl_eeprom_get_product_name(uchar *buf, uint eeprom_bus)
 	return err;
 }
 
+static int cl_eeprom_read_options(char *buf, const struct eeprom_path *eeprom)
+{
+	int len = 0;
+	int err;
+	uchar tmp[PRODUCT_OPTION_SIZE];
+
+	err = cl_eeprom_setup(eeprom);
+	if (err) {
+		printf("%s: Error accesing i2c %x@%x\n", __func__, eeprom->bus, eeprom->chip);
+		return snprintf(buf, PRODUCT_NAME_SIZE, "unknown");
+	}
+
+	for(int i = 0; i < PRODUCT_OPTION_NUM; ++i) {
+		err = cl_eeprom_read(PRODUCT_OPTION_OFFSET + PRODUCT_OPTION_SIZE * i, tmp, PRODUCT_OPTION_SIZE);
+		if (!err && tmp[0] != 0xff) // Check if the flash isn't written
+			len += snprintf(buf + len, PRODUCT_OPTION_SIZE, (char*)tmp);
+	}
+	return len;
+}
+int cl_eeprom_read_som_options(char *buf)
+{
+	return cl_eeprom_read_options(buf, &eeprom_som);
+}
+int cl_eeprom_read_sb_options(char *buf)
+{
+	return cl_eeprom_read_options(buf, &eeprom_sb);
+}
+
+static int cl_eeprom_read_product_name(char *buf, const struct eeprom_path *eeprom)
+{
+	int len;
+	int err;
+	uchar tmp[PRODUCT_NAME_SIZE];
+
+	err = cl_eeprom_setup(eeprom);
+	if (err)
+		printf("%s: Error accesing i2c %x@%x\n", __func__, eeprom->bus, eeprom->chip);
+	else
+		err = cl_eeprom_read(PRODUCT_NAME_OFFSET, tmp, PRODUCT_NAME_SIZE);
+
+	if (!err && tmp[0] != 0xff) // Check if the flash isn't written
+		len = snprintf(buf, PRODUCT_NAME_SIZE, (char*)tmp);
+	else
+		len = snprintf(buf, PRODUCT_NAME_SIZE, "unknown");
+
+	return len;
+}
+
+int cl_eeprom_read_sb_name(char *buf)
+{
+	return cl_eeprom_read_product_name(buf, &eeprom_sb);
+}
+
+int cl_eeprom_read_som_name(char *buf)
+{
+	return cl_eeprom_read_product_name(buf, &eeprom_som);
+}
+
+void cl_eeprom_get_suite(char *buf)
+{
+	buf += cl_eeprom_read_product_name(buf, &eeprom_som);
+	buf += sprintf(buf, " on ");
+	buf += cl_eeprom_read_product_name(buf, &eeprom_sb);
+}
+
 #ifdef CONFIG_CMD_EEPROM_LAYOUT
 /**
  * eeprom_field_print_bin_ver() - print a "version field" which contains binary
@@ -199,17 +335,18 @@ int cl_eeprom_get_product_name(uchar *buf, uint eeprom_bus)
  *      Field Name      123.45
  *
  * @field:	an initialized field to print
+ * @fbuf:	field buffer
  */
-void eeprom_field_print_bin_ver(const struct eeprom_field *field)
+void eeprom_field_print_bin_ver(const struct eeprom_field *field, uchar *fbuf)
 {
-	if ((field->buf[0] == 0xff) && (field->buf[1] == 0xff)) {
-		field->buf[0] = 0;
-		field->buf[1] = 0;
+	if ((fbuf[0] == 0xff) && (fbuf[1] == 0xff)) {
+		fbuf[0] = 0;
+		fbuf[1] = 0;
 	}
 
 	printf(PRINT_FIELD_SEGMENT, field->name);
-	int major = (field->buf[1] << 8 | field->buf[0]) / 100;
-	int minor = (field->buf[1] << 8 | field->buf[0]) - major * 100;
+	int major = (fbuf[1] << 8 | fbuf[0]) / 100;
+	int minor = (fbuf[1] << 8 | fbuf[0]) - major * 100;
 	printf("%d.%02d\n", major, minor);
 }
 
@@ -225,11 +362,13 @@ void eeprom_field_print_bin_ver(const struct eeprom_field *field)
  * field if there's any deviation from it. It also protects from overflow.
  *
  * @field:	an initialized field
+ * @fbuf:	field buffer
  * @value:	a version string
  *
  * Returns 0 on success, -1 on failure.
  */
-int eeprom_field_update_bin_ver(struct eeprom_field *field, char *value)
+int eeprom_field_update_bin_ver(struct eeprom_field *field, uchar *fbuf,
+				char *value)
 {
 	char *endptr;
 	char *tok = strtok(value, ".");
@@ -252,8 +391,8 @@ int eeprom_field_update_bin_ver(struct eeprom_field *field, char *value)
 	if (num >> 16)
 		return -1;
 
-	field->buf[0] = (unsigned char)num;
-	field->buf[1] = num >> 8;
+	fbuf[0] = (unsigned char)num;
+	fbuf[1] = num >> 8;
 
 	return 0;
 }
@@ -270,17 +409,18 @@ char *months[12] = {"Jan", "Feb", "Mar", "Apr", "May", "Jun",
  *      Field Name      56/BAD/9999
  *
  * @field:	an initialized field to print
+ * @fbuf:	field buffer
  */
-void eeprom_field_print_date(const struct eeprom_field *field)
+void eeprom_field_print_date(const struct eeprom_field *field, uchar *fbuf)
 {
 	printf(PRINT_FIELD_SEGMENT, field->name);
-	printf("%02d/", field->buf[0]);
-	if (field->buf[1] >= 1 && field->buf[1] <= 12)
-		printf("%s", months[field->buf[1] - 1]);
+	printf("%02d/", fbuf[0]);
+	if (fbuf[1] >= 1 && fbuf[1] <= 12)
+		printf("%s", months[fbuf[1] - 1]);
 	else
 		printf("BAD");
 
-	printf("/%d\n", field->buf[3] << 8 | field->buf[2]);
+	printf("/%d\n", fbuf[3] << 8 | fbuf[2]);
 }
 
 static int validate_date(unsigned char day, unsigned char month,
@@ -338,11 +478,13 @@ static int validate_date(unsigned char day, unsigned char month,
  * year value, and checks the validity of the date.
  *
  * @field:	an initialized field
+ * @fbuf:	field buffer
  * @value:	a date string
  *
  * Returns 0 on success, -1 on failure.
  */
-int eeprom_field_update_date(struct eeprom_field *field, char *value)
+int eeprom_field_update_date(struct eeprom_field *field, uchar *fbuf,
+			     char *value)
 {
 	char *endptr;
 	char *tok1 = strtok(value, "/");
@@ -381,10 +523,10 @@ int eeprom_field_update_date(struct eeprom_field *field, char *value)
 		return -1;
 	}
 
-	field->buf[0] = day;
-	field->buf[1] = month;
-	field->buf[2] = (unsigned char)year;
-	field->buf[3] = (unsigned char)(year >> 8);
+	fbuf[0] = day;
+	fbuf[1] = month;
+	fbuf[2] = (unsigned char)year;
+	fbuf[3] = (unsigned char)(year >> 8);
 
 	return 0;
 }
@@ -393,81 +535,111 @@ int eeprom_field_update_date(struct eeprom_field *field, char *value)
 #define	LAYOUT_VERSION_VER1 2
 #define	LAYOUT_VERSION_VER2 3
 #define	LAYOUT_VERSION_VER3 4
+#define	LAYOUT_VERSION_VER4 5
 
 extern struct eeprom_field layout_unknown[1];
 
-#define DEFINE_PRINT_UPDATE(x) eeprom_field_print_##x, eeprom_field_update_##x
+#define DEFINE_FIELD_FUNC(x) eeprom_field_print_##x, eeprom_field_update_##x, \
+			     eeprom_field_read_bin
+
+#define FIELD_FUNC_RES_LAST eeprom_field_print_reserved, \
+			    eeprom_field_update_ascii,   \
+			    eeprom_field_read_bin
+
+#define FIELD_FUNC_SERIAL eeprom_field_print_bin_rev,  \
+			  eeprom_field_update_bin_rev, \
+			  eeprom_field_read_rev
 
 #ifdef CONFIG_CM_T3X
 struct eeprom_field layout_legacy[5] = {
-	{ "MAC address",          6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "Board Revision",       2, NULL, DEFINE_PRINT_UPDATE(bin) },
-	{ "Serial Number",        8, NULL, DEFINE_PRINT_UPDATE(bin) },
-	{ "Board Configuration", 64, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ RESERVED_FIELDS,      176, NULL, eeprom_field_print_reserved,
-					   eeprom_field_update_ascii },
+	{ "MAC address",          6, DEFINE_FIELD_FUNC(mac) },
+	{ "Board Revision",       2, DEFINE_FIELD_FUNC(bin) },
+	{ "Serial Number",        8, DEFINE_FIELD_FUNC(bin) },
+	{ "Board Configuration", 64, DEFINE_FIELD_FUNC(ascii) },
+	{ RESERVED_FIELDS,      176, FIELD_FUNC_RES_LAST }
 };
 #else
 #define layout_legacy layout_unknown
 #endif
 
-#if defined(CONFIG_CM_T3X)
+#if defined(CONFIG_CM_T3X) || defined(CONFIG_CM_T3517)
 struct eeprom_field layout_v1[12] = {
-	{ "Major Revision",      2, NULL, DEFINE_PRINT_UPDATE(bin_ver) },
-	{ "Minor Revision",      2, NULL, DEFINE_PRINT_UPDATE(bin_ver) },
-	{ "1st MAC Address",     6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "2nd MAC Address",     6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "Production Date",     4, NULL, DEFINE_PRINT_UPDATE(date) },
-	{ "Serial Number",      12, NULL, DEFINE_PRINT_UPDATE(bin_rev) },
-	{ RESERVED_FIELDS,      96, NULL, DEFINE_PRINT_UPDATE(reserved) },
-	{ "Product Name",       16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #1", 16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #2", 16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #3", 16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ RESERVED_FIELDS,      64, NULL, eeprom_field_print_reserved,
-					  eeprom_field_update_ascii },
+	{ "Major Revision",      2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "Minor Revision",      2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "1st MAC Address",     6, DEFINE_FIELD_FUNC(mac) },
+	{ "2nd MAC Address",     6, DEFINE_FIELD_FUNC(mac) },
+	{ "Production Date",     4, DEFINE_FIELD_FUNC(date) },
+	{ "Serial Number",      12, FIELD_FUNC_SERIAL },
+	{ RESERVED_FIELDS,      96, DEFINE_FIELD_FUNC(reserved) },
+	{ "Product Name",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #1", 16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #2", 16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #3", 16, DEFINE_FIELD_FUNC(ascii) },
+	{ RESERVED_FIELDS,      64, FIELD_FUNC_RES_LAST }
 };
 #else
 #define layout_v1 layout_unknown
 #endif
 
 struct eeprom_field layout_v2[15] = {
-	{ "Major Revision",            2, NULL, DEFINE_PRINT_UPDATE(bin_ver) },
-	{ "Minor Revision",            2, NULL, DEFINE_PRINT_UPDATE(bin_ver) },
-	{ "1st MAC Address",           6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "2nd MAC Address",           6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "Production Date",           4, NULL, DEFINE_PRINT_UPDATE(date) },
-	{ "Serial Number",            12, NULL, DEFINE_PRINT_UPDATE(bin_rev) },
-	{ "3rd MAC Address (WIFI)",    6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "4th MAC Address (Bluetooth)", 6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "Layout Version",            1, NULL, DEFINE_PRINT_UPDATE(bin) },
-	{ RESERVED_FIELDS,            83, NULL, DEFINE_PRINT_UPDATE(reserved) },
-	{ "Product Name",             16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #1",       16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #2",       16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #3",       16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ RESERVED_FIELDS,            64, NULL, eeprom_field_print_reserved,
-						eeprom_field_update_ascii },
+	{ "Major Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "Minor Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "1st MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "2nd MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "Production Date",           4, DEFINE_FIELD_FUNC(date) },
+	{ "Serial Number",            12, FIELD_FUNC_SERIAL },
+	{ "3rd MAC Address (WIFI)",    6, DEFINE_FIELD_FUNC(mac) },
+	{ "4th MAC Address (Bluetooth)", 6, DEFINE_FIELD_FUNC(mac) },
+	{ "Layout Version",            1, DEFINE_FIELD_FUNC(bin) },
+	{ RESERVED_FIELDS,            83, DEFINE_FIELD_FUNC(reserved) },
+	{ "Product Name",             16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #1",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #2",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #3",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ RESERVED_FIELDS,            64, FIELD_FUNC_RES_LAST },
 };
 
 struct eeprom_field layout_v3[16] = {
-	{ "Major Revision",            2, NULL, DEFINE_PRINT_UPDATE(bin_ver) },
-	{ "Minor Revision",            2, NULL, DEFINE_PRINT_UPDATE(bin_ver) },
-	{ "1st MAC Address",           6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "2nd MAC Address",           6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "Production Date",           4, NULL, DEFINE_PRINT_UPDATE(date) },
-	{ "Serial Number",            12, NULL, DEFINE_PRINT_UPDATE(bin_rev) },
-	{ "3rd MAC Address (WIFI)",    6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "4th MAC Address (Bluetooth)", 6, NULL, DEFINE_PRINT_UPDATE(mac) },
-	{ "Layout Version",            1, NULL, DEFINE_PRINT_UPDATE(bin) },
-	{ "CompuLab EEPROM ID",        3, NULL, DEFINE_PRINT_UPDATE(bin) },
-	{ RESERVED_FIELDS,            80, NULL, DEFINE_PRINT_UPDATE(reserved) },
-	{ "Product Name",             16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #1",       16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #2",       16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ "Product Options #3",       16, NULL, DEFINE_PRINT_UPDATE(ascii) },
-	{ RESERVED_FIELDS,            64, NULL, eeprom_field_print_reserved,
-						eeprom_field_update_ascii },
+	{ "Major Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "Minor Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "1st MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "2nd MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "Production Date",           4, DEFINE_FIELD_FUNC(date) },
+	{ "Serial Number",            12, FIELD_FUNC_SERIAL },
+	{ "3rd MAC Address (WIFI)",    6, DEFINE_FIELD_FUNC(mac) },
+	{ "4th MAC Address (Bluetooth)", 6, DEFINE_FIELD_FUNC(mac) },
+	{ "Layout Version",            1, DEFINE_FIELD_FUNC(bin) },
+	{ "CompuLab EEPROM ID",        3, DEFINE_FIELD_FUNC(bin) },
+	{ RESERVED_FIELDS,            80, DEFINE_FIELD_FUNC(reserved) },
+	{ "Product Name",             16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #1",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #2",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #3",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ RESERVED_FIELDS,            64, FIELD_FUNC_RES_LAST },
+};
+
+struct eeprom_field layout_v4[21] = {
+	{ "Major Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "Minor Revision",            2, DEFINE_FIELD_FUNC(bin_ver) },
+	{ "1st MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "2nd MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "Production Date",           4, DEFINE_FIELD_FUNC(date) },
+	{ "Serial Number",            12, FIELD_FUNC_SERIAL },
+	{ "3rd MAC Address (WIFI)",    6, DEFINE_FIELD_FUNC(mac) },
+	{ "4th MAC Address (Bluetooth)", 6, DEFINE_FIELD_FUNC(mac) },
+	{ "Layout Version",            1, DEFINE_FIELD_FUNC(bin) },
+	{ "CompuLab EEPROM ID",        3, DEFINE_FIELD_FUNC(bin) },
+	{ "5th MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ "6th MAC Address",           6, DEFINE_FIELD_FUNC(mac) },
+	{ RESERVED_FIELDS,             4, DEFINE_FIELD_FUNC(reserved) },
+	{ RESERVED_FIELDS,            64, DEFINE_FIELD_FUNC(reserved) },
+	{ "Product Name",             16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #1",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #2",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #3",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #4",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ "Product Options #5",       16, DEFINE_FIELD_FUNC(ascii) },
+	{ RESERVED_FIELDS,            32, DEFINE_FIELD_FUNC(reserved) },
 };
 
 void eeprom_layout_assign(struct eeprom_layout *layout, int layout_version)
@@ -489,6 +661,10 @@ void eeprom_layout_assign(struct eeprom_layout *layout, int layout_version)
 		layout->fields = layout_v3;
 		layout->num_of_fields = ARRAY_SIZE(layout_v3);
 		break;
+	case LAYOUT_VERSION_VER4:
+		layout->fields = layout_v4;
+		layout->num_of_fields = ARRAY_SIZE(layout_v4);
+		break;
 	default:
 		__eeprom_layout_assign(layout, layout_version);
 	}
@@ -504,6 +680,8 @@ int eeprom_parse_layout_version(char *str)
 		return LAYOUT_VERSION_VER2;
 	else if (!strcmp(str, "v3"))
 		return LAYOUT_VERSION_VER3;
+	else if (!strcmp(str, "v4"))
+		return LAYOUT_VERSION_VER4;
 	else
 		return LAYOUT_VERSION_UNRECOGNIZED;
 }
@@ -518,6 +696,8 @@ int eeprom_layout_detect(unsigned char *data)
 		return LAYOUT_VERSION_VER2;
 	case 3:
 		return LAYOUT_VERSION_VER3;
+	case 4 ... 0x1f:
+		return LAYOUT_VERSION_VER4;
 	}
 
 	if (data[EEPROM_LAYOUT_VER_OFFSET] >= 0x20)
diff --git a/board/compulab/common/eeprom.h b/board/compulab/common/eeprom.h
index a9c0203b81..30a287e79a 100644
--- a/board/compulab/common/eeprom.h
+++ b/board/compulab/common/eeprom.h
@@ -1,28 +1,48 @@
-/* SPDX-License-Identifier: GPL-2.0+ */
 /*
  * (C) Copyright 2011 CompuLab, Ltd. <www.compulab.co.il>
  *
  * Authors: Nikita Kiryanov <nikita@compulab.co.il>
  *	    Igor Grinberg <grinberg@compulab.co.il>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
  */
 
 #ifndef _EEPROM_
 #define _EEPROM_
 #include <errno.h>
+#include <asm/setup.h>
+
+#define EEPROM_LAYOUT_VER_OFFSET	44
+#define BOARD_SERIAL_OFFSET		20
+#define BOARD_SERIAL_OFFSET_LEGACY	8
+#define BOARD_REV_OFFSET		0
+#define BOARD_REV_OFFSET_LEGACY		6
+#define BOARD_REV_SIZE			2
+#define PRODUCT_NAME_OFFSET		128
+#define PRODUCT_NAME_SIZE		16
+#define PRODUCT_OPTION_OFFSET		144
+#define PRODUCT_OPTION_SIZE		16
+#define PRODUCT_OPTION_NUM		5
+#define MAC_ADDR_OFFSET			4
+#define MAC_ADDR_OFFSET_LEGACY		0
 
-#ifdef CONFIG_SYS_I2C
+#if (defined(CONFIG_SYS_I2C) || defined(CONFIG_DM_I2C))
 int cl_eeprom_read_mac_addr(uchar *buf, uint eeprom_bus);
-u32 cl_eeprom_get_board_rev(uint eeprom_bus);
+u32 cl_eeprom_get_som_revision(void);
+u32 cl_eeprom_get_sb_revision(void);
 int cl_eeprom_get_product_name(uchar *buf, uint eeprom_bus);
+int cl_eeprom_read_sb_name(char *buf);
+int cl_eeprom_read_som_name(char *buf);
+int cl_eeprom_read_som_options(char *buf);
+int cl_eeprom_read_sb_options(char *buf);
+void cl_eeprom_get_suite(char* buf);
+void cpl_get_som_serial(struct tag_serialnr *serialnr);
+void cpl_get_sb_serial(struct tag_serialnr *serialnr);
 #else
 static inline int cl_eeprom_read_mac_addr(uchar *buf, uint eeprom_bus)
 {
 	return 1;
 }
-static inline u32 cl_eeprom_get_board_rev(uint eeprom_bus)
-{
-	return 0;
-}
 static inline int cl_eeprom_get_product_name(uchar *buf, uint eeprom_bus)
 {
 	return -ENOSYS;
diff --git a/common/eeprom/eeprom_field.c b/common/eeprom/eeprom_field.c
index f56eebe679..814dc4eb7a 100644
--- a/common/eeprom/eeprom_field.c
+++ b/common/eeprom/eeprom_field.c
@@ -11,7 +11,7 @@
 #include <eeprom_field.h>
 
 static void __eeprom_field_print_bin(const struct eeprom_field *field,
-				     char *delimiter, bool reverse)
+				     uchar *fbuf, char *delimiter, bool reverse)
 {
 	int i;
 	int from = reverse ? field->size - 1 : 0;
@@ -19,12 +19,12 @@ static void __eeprom_field_print_bin(const struct eeprom_field *field,
 
 	printf(PRINT_FIELD_SEGMENT, field->name);
 	for (i = from; i != to; reverse ? i-- : i++)
-		printf("%02x%s", field->buf[i], delimiter);
+		printf("%02x%s", fbuf[i], delimiter);
 
-	printf("%02x\n", field->buf[i]);
+	printf("%02x\n", fbuf[i]);
 }
 
-static int __eeprom_field_update_bin(struct eeprom_field *field,
+static int __eeprom_field_update_bin(struct eeprom_field *field, uchar *fbuf,
 				     const char *value, bool reverse)
 {
 	int len = strlen(value);
@@ -36,7 +36,7 @@ static int __eeprom_field_update_bin(struct eeprom_field *field,
 	if (len > field->size * 2)
 		return -1;
 
-	memset(field->buf, 0, field->size);
+	memset(fbuf, 0, field->size);
 
 	/* i - string iterator, j - buf iterator */
 	for (j = 0; j < field->size; j++) {
@@ -59,7 +59,7 @@ static int __eeprom_field_update_bin(struct eeprom_field *field,
 		if (*endptr != '\0' || byte < 0)
 			return -1;
 
-		field->buf[j] = byte;
+		fbuf[j] = byte;
 		i = reverse ? i - 2 : i + 2;
 	}
 
@@ -67,7 +67,8 @@ static int __eeprom_field_update_bin(struct eeprom_field *field,
 }
 
 static int __eeprom_field_update_bin_delim(struct eeprom_field *field,
-					   char *value, char *delimiter)
+					   uchar *fbuf, char *value,
+					   char *delimiter)
 {
 	int count = 0;
 	int i, val;
@@ -92,7 +93,7 @@ static int __eeprom_field_update_bin_delim(struct eeprom_field *field,
 			return -1;
 
 		/* here we assume that each tok is no more than byte long */
-		field->buf[i] = (unsigned char)val;
+		fbuf[i] = (unsigned char)val;
 		tok = strtok(NULL, delimiter);
 	}
 
@@ -108,21 +109,46 @@ static int __eeprom_field_update_bin_delim(struct eeprom_field *field,
  *      Field Name       0102030405060708090a
  *
  * @field:	an initialized field to print
+ * @fbuf:	field buffer
  */
-void eeprom_field_print_bin(const struct eeprom_field *field)
+void eeprom_field_print_bin(const struct eeprom_field *field, uchar *fbuf)
 {
-	__eeprom_field_print_bin(field, "", false);
+	__eeprom_field_print_bin(field, fbuf, "", false);
 }
 
 /**
  * eeprom_field_update_bin() - Update field with new data in binary form
  *
  * @field:	an initialized field
+ * @fbuf:	field buffer
  * @value:	a string of values (i.e. "10b234a")
  */
-int eeprom_field_update_bin(struct eeprom_field *field, char *value)
+int eeprom_field_update_bin(struct eeprom_field *field, uchar *fbuf,
+			    char *value)
 {
-	return __eeprom_field_update_bin(field, value, false);
+	return __eeprom_field_update_bin(field, fbuf, value, false);
+}
+
+/**
+ * eeprom_field_read_bin() - Read field data in binary form
+ *
+ * @field:     an initialized field
+ * @fbuf:      field buffer
+ * @buf:       read buffer
+ * @buf_size:  read buffer size
+ */
+int eeprom_field_read_bin(const struct eeprom_field *field, uchar *fbuf,
+                         uchar *buf, int buf_size)
+{
+	memset(buf, 0, buf_size);
+	if (field->size <= 0)
+		return 0;
+	if (field->size > buf_size)
+		memcpy(buf, fbuf, buf_size);
+	else
+		memcpy(buf, fbuf, field->size);
+
+	return 0;
 }
 
 /**
@@ -130,11 +156,13 @@ int eeprom_field_update_bin(struct eeprom_field *field, char *value)
  *				    binary form
  *
  * @field:	an initialized field
+ * @fbuf:	field buffer
  * @value:	a space delimited string of byte values (i.e. "1 02 3 0x4")
  */
-int eeprom_field_update_reserved(struct eeprom_field *field, char *value)
+int eeprom_field_update_reserved(struct eeprom_field *field, uchar *fbuf,
+				 char *value)
 {
-	return __eeprom_field_update_bin_delim(field, value, " ");
+	return __eeprom_field_update_bin_delim(field, fbuf, value, " ");
 }
 
 /**
@@ -150,10 +178,11 @@ int eeprom_field_update_reserved(struct eeprom_field *field, char *value)
  *      Field Name      0a090807060504030201
  *
  * @field:	an initialized field to print
+ * @fbuf:	field buffer
  */
-void eeprom_field_print_bin_rev(const struct eeprom_field *field)
+void eeprom_field_print_bin_rev(const struct eeprom_field *field, uchar *fbuf)
 {
-	__eeprom_field_print_bin(field, "", true);
+	__eeprom_field_print_bin(field, fbuf, "", true);
 }
 
 /**
@@ -165,11 +194,34 @@ void eeprom_field_print_bin_rev(const struct eeprom_field *field)
  * "3412" will be written to the field.
  *
  * @field:	an initialized field
+ * @fbuf:	field buffer
  * @value:	a string of byte values
  */
-int eeprom_field_update_bin_rev(struct eeprom_field *field, char *value)
+int eeprom_field_update_bin_rev(struct eeprom_field *field, uchar *fbuf,
+				char *value)
+{
+	return __eeprom_field_update_bin(field, fbuf, value, true);
+}
+
+/**
+ * eeprom_field_read_rev() - Read reversed binary data
+ *
+ * @field:     an initialized field
+ * @fbuf:      field buffer
+ * @buf:       read buffer
+ * @buf_size:  read buffer size
+ */
+int eeprom_field_read_rev(const struct eeprom_field *field, uchar *fbuf,
+			  uchar *buf, int buf_size)
 {
-	return __eeprom_field_update_bin(field, value, true);
+	int i;
+
+	memset(buf, 0, buf_size);
+
+	for (i = field->size - 1; i >= 0; i--, buf++)
+		*buf = fbuf[i];
+
+	return 0;
 }
 
 /**
@@ -181,10 +233,12 @@ int eeprom_field_update_bin_rev(struct eeprom_field *field, char *value)
  *      Field Name     01:02:03:04:05:06
  *
  * @field:	an initialized field to print
+ * @fbuf:	field buffer
  */
-void eeprom_field_print_mac(const struct eeprom_field *field)
+void eeprom_field_print_mac(const struct eeprom_field *field, uchar *fbuf)
+
 {
-	__eeprom_field_print_bin(field, ":", false);
+	__eeprom_field_print_bin(field, fbuf, ":", false);
 }
 
 /**
@@ -192,42 +246,47 @@ void eeprom_field_print_mac(const struct eeprom_field *field)
  *			       data
  *
  * @field:	an initialized field
+ * @fbuf:	field buffer
  * @value:	a colon delimited string of byte values (i.e. "1:02:3:ff")
  */
-int eeprom_field_update_mac(struct eeprom_field *field, char *value)
+int eeprom_field_update_mac(struct eeprom_field *field, uchar *fbuf,
+			    char *value)
 {
-	return __eeprom_field_update_bin_delim(field, value, ":");
+	return __eeprom_field_update_bin_delim(field, fbuf, value, ":");
 }
 
 /**
  * eeprom_field_print_ascii() - print a field which contains ASCII data
  * @field:	an initialized field to print
+ * @fbuf:	field buffer
  */
-void eeprom_field_print_ascii(const struct eeprom_field *field)
+void eeprom_field_print_ascii(const struct eeprom_field *field, uchar *fbuf)
 {
 	char format[8];
 
 	sprintf(format, "%%.%ds\n", field->size);
 	printf(PRINT_FIELD_SEGMENT, field->name);
-	printf(format, field->buf);
+	printf(format, fbuf);
 }
 
 /**
  * eeprom_field_update_ascii() - Update field with new data in ASCII form
  * @field:	an initialized field
+ * @fbuf:	field buffer
  * @value:	the new string data
  *
  * Returns 0 on success, -1 of failure (new string too long).
  */
-int eeprom_field_update_ascii(struct eeprom_field *field, char *value)
+int eeprom_field_update_ascii(struct eeprom_field *field, uchar *fbuf,
+			      char *value)
 {
 	if (strlen(value) >= field->size) {
 		printf("%s: new data too long\n", field->name);
 		return -1;
 	}
 
-	strncpy((char *)field->buf, value, field->size - 1);
-	field->buf[field->size - 1] = '\0';
+	strncpy((char *)fbuf, value, field->size - 1);
+	fbuf[field->size - 1] = '\0';
 
 	return 0;
 }
@@ -241,8 +300,9 @@ int eeprom_field_update_ascii(struct eeprom_field *field, char *value)
  *      Reserved fields              (64 bytes)
  *
  * @field:	an initialized field to print
+ * @fbuf:	field buffer
  */
-void eeprom_field_print_reserved(const struct eeprom_field *field)
+void eeprom_field_print_reserved(const struct eeprom_field *field, uchar *fbuf)
 {
 	printf(PRINT_FIELD_SEGMENT, "Reserved fields\t");
 	printf("(%d bytes)\n", field->size);
diff --git a/common/eeprom/eeprom_layout.c b/common/eeprom/eeprom_layout.c
index 5a9be1da06..cc6dd39e01 100644
--- a/common/eeprom/eeprom_layout.c
+++ b/common/eeprom/eeprom_layout.c
@@ -14,8 +14,8 @@
 #define NO_LAYOUT_FIELDS	"Unknown layout. Dumping raw data\n"
 
 struct eeprom_field layout_unknown[1] = {
-	{ NO_LAYOUT_FIELDS, 256, NULL, eeprom_field_print_bin,
-				       eeprom_field_update_bin },
+	{ NO_LAYOUT_FIELDS, 256, eeprom_field_print_bin,
+	  eeprom_field_update_bin },
 };
 
 /*
@@ -51,9 +51,10 @@ static void eeprom_layout_print(const struct eeprom_layout *layout)
 {
 	int i;
 	struct eeprom_field *fields = layout->fields;
+	uchar *fbuf = layout->data;
 
-	for (i = 0; i < layout->num_of_fields; i++)
-		fields[i].print(&fields[i]);
+	for (i = 0; i < layout->num_of_fields; fbuf += fields[i++].size)
+		fields[i].print(&fields[i], fbuf);
 }
 
 /*
@@ -69,6 +70,7 @@ static int eeprom_layout_update_field(struct eeprom_layout *layout,
 {
 	int i, err;
 	struct eeprom_field *fields = layout->fields;
+	uchar *fbuf = layout->data;
 
 	if (new_data == NULL)
 		return 0;
@@ -76,12 +78,12 @@ static int eeprom_layout_update_field(struct eeprom_layout *layout,
 	if (field_name == NULL)
 		return -1;
 
-	for (i = 0; i < layout->num_of_fields; i++) {
+	for (i = 0; i < layout->num_of_fields; fbuf += fields[i++].size) {
 		if (fields[i].name == RESERVED_FIELDS ||
 		    strcmp(fields[i].name, field_name))
 			continue;
 
-		err = fields[i].update(&fields[i], new_data);
+		err = fields[i].update(&fields[i], fbuf, new_data);
 		if (err)
 			printf("Invalid data for field %s\n", field_name);
 
@@ -94,6 +96,42 @@ static int eeprom_layout_update_field(struct eeprom_layout *layout,
 }
 
 /*
+ * eeprom_layout_read_field() - read a single field from the layout data
+ * @layout:    A pointer to an existing struct layout.
+ * @field_name:        The name of the field to update.
+ * @buf:       Read data buffer.
+ * @buf_size:  Read data buffer size.
+ *
+ * Returns: 0 on success, negative error value on failure.
+ */
+static int eeprom_layout_read_field(struct eeprom_layout *layout,
+				    char *field_name, uchar *buf, int buf_size)
+{
+       int i, err;
+       struct eeprom_field *fields = layout->fields;
+       uchar *fbuf = layout->data;
+
+       if ((field_name == NULL) || (buf == NULL) || (buf_size <= 0))
+               return -1;
+
+	for (i = 0; i < layout->num_of_fields; fbuf += fields[i++].size) {
+		if (fields[i].name == RESERVED_FIELDS ||
+		    strcmp(fields[i].name, field_name))
+			continue;
+
+		err = fields[i].read(&fields[i], fbuf, buf, buf_size);
+		if (err)
+			printf("Field %s, read error\n", field_name);
+
+		return err;
+	}
+
+	printf("No such field '%s'\n", field_name);
+
+	return -1;
+}
+
+/*
  * eeprom_layout_setup() - setup layout struct with the layout data and
  *			   metadata as dictated by layout_version
  * @layout:	A pointer to an existing struct layout.
@@ -104,8 +142,6 @@ static int eeprom_layout_update_field(struct eeprom_layout *layout,
 void eeprom_layout_setup(struct eeprom_layout *layout, unsigned char *buf,
 			 unsigned int buf_size, int layout_version)
 {
-	int i;
-
 	if (layout_version == LAYOUT_VERSION_AUTODETECT)
 		layout->layout_version = eeprom_layout_detect(buf);
 	else
@@ -113,12 +149,8 @@ void eeprom_layout_setup(struct eeprom_layout *layout, unsigned char *buf,
 
 	eeprom_layout_assign(layout, layout_version);
 	layout->data = buf;
-	for (i = 0; i < layout->num_of_fields; i++) {
-		layout->fields[i].buf = buf;
-		buf += layout->fields[i].size;
-	}
-
 	layout->data_size = buf_size;
 	layout->print = eeprom_layout_print;
 	layout->update = eeprom_layout_update_field;
+	layout->read = eeprom_layout_read_field;
 }
diff --git a/drivers/video/Kconfig b/drivers/video/Kconfig
index 653e6d72a7..a13d90f3d1 100644
--- a/drivers/video/Kconfig
+++ b/drivers/video/Kconfig
@@ -439,6 +439,15 @@ config VIDEO_LCD_RAYDIUM_RM67191
 	Say Y here if you want to enable support for Raydium RM68200
 	1080x1920 DSI video mode panel.
 
+config VIDEO_LCD_STARTEK_ILI9881C
+	tristate "Startek ILI9881C-based panels"
+	depends on DM_VIDEO
+	select VIDEO_MIPI_DSI
+	default n
+	help
+	  Say Y if you want to enable support for panels based on the
+	  Startek panel with an ILI9881c controller.
+
 config VIDEO_LCD_SSD2828
 	bool "SSD2828 bridge chip"
 	default n
diff --git a/drivers/video/Makefile b/drivers/video/Makefile
index bd6056ccf1..c48cde4760 100644
--- a/drivers/video/Makefile
+++ b/drivers/video/Makefile
@@ -57,6 +57,7 @@ obj-$(CONFIG_VIDEO_LCD_HITACHI_TX18D42VM) += hitachi_tx18d42vm_lcd.o
 obj-$(CONFIG_VIDEO_LCD_ORISETECH_OTM8009A) += orisetech_otm8009a.o
 obj-$(CONFIG_VIDEO_LCD_RAYDIUM_RM68200) += raydium-rm68200.o
 obj-$(CONFIG_VIDEO_LCD_RAYDIUM_RM67191) += raydium-rm67191.o
+obj-$(CONFIG_VIDEO_LCD_STARTEK_ILI9881C) += startek-ili9881c.o
 obj-$(CONFIG_VIDEO_LCD_SSD2828) += ssd2828.o
 obj-$(CONFIG_VIDEO_LCD_TDO_TL070WSH30) += tdo-tl070wsh30.o
 obj-$(CONFIG_VIDEO_ADV7535) += adv7535.o
diff --git a/include/eeprom_field.h b/include/eeprom_field.h
index 05c0d14592..311c49401a 100644
--- a/include/eeprom_field.h
+++ b/include/eeprom_field.h
@@ -14,25 +14,36 @@
 struct eeprom_field {
 	char *name;
 	int size;
-	unsigned char *buf;
 
-	void (*print)(const struct eeprom_field *eeprom_field);
-	int (*update)(struct eeprom_field *eeprom_field, char *value);
+	void (*print)(const struct eeprom_field *eeprom_field, uchar *fbuf);
+	int (*update)(struct eeprom_field *eeprom_field, uchar *fbuf,
+		      char *value);
+	int (*read)(const struct eeprom_field *field, uchar *fbuf, uchar *buf,
+		    int buf_size);
 };
 
-void eeprom_field_print_bin(const struct eeprom_field *field);
-int eeprom_field_update_bin(struct eeprom_field *field, char *value);
-
-void eeprom_field_print_bin_rev(const struct eeprom_field *field);
-int eeprom_field_update_bin_rev(struct eeprom_field *field, char *value);
-
-void eeprom_field_print_mac(const struct eeprom_field *field);
-int eeprom_field_update_mac(struct eeprom_field *field, char *value);
-
-void eeprom_field_print_ascii(const struct eeprom_field *field);
-int eeprom_field_update_ascii(struct eeprom_field *field, char *value);
-
-void eeprom_field_print_reserved(const struct eeprom_field *field);
-int eeprom_field_update_reserved(struct eeprom_field *field, char *value);
+void eeprom_field_print_bin(const struct eeprom_field *field, uchar *fbuf);
+int eeprom_field_update_bin(struct eeprom_field *field, uchar *fbuf,
+			    char *value);
+int eeprom_field_read_bin(const struct eeprom_field *field, uchar *fbuf,
+			  uchar *buf, int buf_size);
+
+void eeprom_field_print_bin_rev(const struct eeprom_field *field, uchar *fbuf);
+int eeprom_field_update_bin_rev(struct eeprom_field *field, uchar *fbuf,
+				char *value);
+int eeprom_field_read_rev(const struct eeprom_field *field, uchar *fbuf,
+			  uchar *buf, int buf_size);
+
+void eeprom_field_print_mac(const struct eeprom_field *field, uchar *fbuf);
+int eeprom_field_update_mac(struct eeprom_field *field, uchar *fbuf,
+			    char *value);
+
+void eeprom_field_print_ascii(const struct eeprom_field *field, uchar *fbuf);
+int eeprom_field_update_ascii(struct eeprom_field *field, uchar *fbuf,
+			      char *value);
+
+void eeprom_field_print_reserved(const struct eeprom_field *field, uchar *fbuf);
+int eeprom_field_update_reserved(struct eeprom_field *field, uchar *fbuf,
+				 char *value);
 
 #endif
diff --git a/include/eeprom_layout.h b/include/eeprom_layout.h
index 730d963ab9..50e8ec1085 100644
--- a/include/eeprom_layout.h
+++ b/include/eeprom_layout.h
@@ -22,6 +22,8 @@ struct eeprom_layout {
 	void (*print)(const struct eeprom_layout *eeprom_layout);
 	int (*update)(struct eeprom_layout *eeprom_layout, char *field_name,
 		      char *new_data);
+	int (*read)(struct eeprom_layout *eeprom_layout, char *field_name,
+		    uchar *buf, int buf_size);
 };
 
 void eeprom_layout_setup(struct eeprom_layout *layout, unsigned char *buf,
diff --git a/tools/env/fw_env.config b/tools/env/fw_env.config
index 053895a2c0..ee3fb8ebc3 100644
--- a/tools/env/fw_env.config
+++ b/tools/env/fw_env.config
@@ -6,33 +6,8 @@
 # be the same as the Environment size, which is valid for NOR and SPI-dataflash
 # Device offset must be prefixed with 0x to be parsed as a hexadecimal value.
 
-# NOR example
-# MTD device name	Device offset	Env. size	Flash sector size	Number of sectors
-/dev/mtd1		0x0000		0x4000		0x4000
-/dev/mtd2		0x0000		0x4000		0x4000
-
-# MTD SPI-dataflash example
-# MTD device name	Device offset	Env. size	Flash sector size	Number of sectors
-#/dev/mtd5		0x4200		0x4200
-#/dev/mtd6		0x4200		0x4200
-
-# NAND example
-#/dev/mtd0		0x4000		0x4000		0x20000			2
-
-# On a block device a negative offset is treated as a backwards offset from the
-# end of the device/partition, rather than a forwards offset from the start.
-
-# Block device example
-#/dev/mmcblk0		0xc0000		0x20000
-#/dev/mmcblk0		-0x20000	0x20000
-
-# VFAT example
-#/boot/uboot.env	0x0000          0x4000
-
-# UBI volume
-#/dev/ubi0_0		0x0		0x1f000		0x1f000
-#/dev/ubi0_1		0x0		0x1f000		0x1f000
-
-# UBI volume by name
-#/dev/ubi0:env		0x0		0x1f000		0x1f000
-#/dev/ubi0:env-redund	0x0		0x1f000		0x1f000
+# Block devices for CompuLab imx8m-plus
+# emmc
+/dev/mmcblk2boot0	0x33d800 0x1000
+# sd-card; if AltBoot is in use
+#/dev/mmcblk1		0x33d800 0x1000
diff --git a/tools/env/fw_env_main.c b/tools/env/fw_env_main.c
index 1d193bd437..8d247ae910 100644
--- a/tools/env/fw_env_main.c
+++ b/tools/env/fw_env_main.c
@@ -49,6 +49,8 @@ static struct option long_options[] = {
 	{"noheader", no_argument, NULL, 'n'},
 	{"lock", required_argument, NULL, 'l'},
 	{"version", no_argument, NULL, 'v'},
+	{"env", no_argument, NULL, 'e'},
+	{"viadt", no_argument, NULL, 'E'},
 	{NULL, 0, NULL, 0}
 };
 
@@ -74,6 +76,10 @@ void usage_printenv(void)
 #endif
 		" -n, --noheader       do not repeat variable name in output\n"
 		" -l, --lock           lock node, default:/var/lock\n"
+		" -e, --env            print default fw_env.config\n"
+#ifdef CONFIG_DT_NODE
+		" -E, --viadt      print environment passed via devicetree\n"
+#endif
 		"\n");
 }
 
@@ -112,6 +118,61 @@ void usage_env_set(void)
 		"\n");
 }
 
+
+#if defined(CONFIG_DT_NODE)
+
+#define GET_PROP_i(NAME) int NAME = read_dt_prop_int( CONFIG_DT_NODE "/" #NAME, NULL )
+#define GET_PROP_s(NAME) char* NAME = NULL; read_dt_prop_int( CONFIG_DT_NODE "/" #NAME , &NAME)
+#define CLEAR_s(NAME) if(NAME) free(NAME)
+
+static int read_dt_prop_int(const char *name, char** str)
+{
+	FILE *fp;
+	int retval;
+	char *buf = NULL;
+	size_t count = 0;
+
+	fp = fopen(name, "r");
+	if(fp == NULL) {
+		fprintf(stderr, "Can't open property %s %m\n", name);
+		return -1;
+	}
+
+	retval = getline(&buf, &count, fp);
+	fclose(fp);
+	if(0 < retval) {
+		if(str) { //extract a string property
+			*str = buf;
+			return 0;
+		}
+		else { //extract a integer property
+			retval = strtoul(buf, NULL, 0);
+		}
+	}
+
+	CLEAR_s(buf);
+
+	return retval;
+}
+
+int get_config_via_dt(void)
+{
+	GET_PROP_i(env_size);
+	GET_PROP_i(env_off);
+	GET_PROP_s(env_dev);
+
+	if( !env_dev || 0 >= env_size || 0>= env_off) {
+		fprintf(stderr, "Valid DT node %s not found\n", CONFIG_DT_NODE);
+		return -1;
+	}
+
+	printf("%s\t0x%x\t0x%x\n", env_dev, env_off, env_size);
+
+	CLEAR_s(env_dev);
+
+	return 0;
+}
+#endif
 static void parse_common_args(int argc, char *argv[])
 {
 	int c;
@@ -120,7 +181,7 @@ static void parse_common_args(int argc, char *argv[])
 	env_opts.config_file = CONFIG_FILE;
 #endif
 
-	while ((c = getopt_long(argc, argv, ":a:c:l:h:v", long_options, NULL)) !=
+	while ((c = getopt_long(argc, argv, ":a:c:l:h:veE", long_options, NULL)) !=
 	       EOF) {
 		switch (c) {
 #ifdef CONFIG_FILE
@@ -139,6 +200,16 @@ static void parse_common_args(int argc, char *argv[])
 			fprintf(stderr, "Compiled with " U_BOOT_VERSION "\n");
 			exit(EXIT_SUCCESS);
 			break;
+		case 'e':
+			fprintf(stdout, "/dev/mmcblk2boot0 0x%x 0x%x\n", CONFIG_ENV_OFFSET, CONFIG_ENV_SIZE);
+			fprintf(stdout, "/dev/mmcblk1 0x%x 0x%x\n", CONFIG_ENV_OFFSET, CONFIG_ENV_SIZE);
+			exit(EXIT_SUCCESS);
+			break;
+#if defined(CONFIG_DT_NODE)
+		case 'E':
+			exit(get_config_via_dt());
+			break;
+#endif
 		default:
 			/* ignore unknown options */
 			break;
diff --git a/tools/env/fw_env_private.h b/tools/env/fw_env_private.h
index 86be16dabc..9c3b7bf50c 100644
--- a/tools/env/fw_env_private.h
+++ b/tools/env/fw_env_private.h
@@ -22,6 +22,7 @@
  * for notes on configuration.
  */
 #define CONFIG_FILE     "/etc/fw_env.config"
+#define CONFIG_DT_NODE  "/sys/firmware/devicetree/base/fw_env"
 
 #ifndef CONFIG_FILE
 #define HAVE_REDUND /* For systems with 2 env sectors */
-- 
2.11.0

